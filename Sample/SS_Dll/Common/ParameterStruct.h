#ifdef FIRMWARE
#define BIT16 uint16_t
#define BIT32 uint32_t

typedef struct _tAcqPar {
	BIT32 ExpTime;
	int PreDelay, PostDelay;
	int RdyDelay, ExpDelay;
} tAcqPar;
#else
#define BIT16 UINT16
#define BIT32 UINT32
#endif // FIRMWARE

// Detector Parameter Class
typedef struct _tCmdPar {
	union {
		BIT16 value;
		struct {
			BIT16 FSM_status : 3;
//			BIT16 IdxExpAck : 1;	// == ReadyToGetImage
			BIT16 ReadyToGetImage : 1;	
			BIT16 AED_Ready_Done : 1;
			BIT16 reserved_11 : 11;
		} reg;
	} FSM_REG;

	union {
		BIT16 value;
		struct {
			BIT16 reset_FSM : 1;
			BIT16 GetDark : 1;
			BIT16 GetBright : 1;
			BIT16 SoftTrg : 1;
			BIT16 SysRst : 1;
			BIT16 reserved_11 : 11;
		} reg;
	} SYS_CMD_REG;

	BIT32 EXP_SIZE;

	BIT16 EXP_DELAY;
	BIT16 READY_DELAY;
	BIT16 PRE_DELAY;
	BIT16 POST_DELAY;

	BIT16 ROIC_NUM;
	BIT16 PURPOSE;
	BIT16 SIZE_1;
	BIT16 SIZE_2;
	BIT16 MAJOR_REV;
	BIT16 MINOR_REV;
} tCmdPar;

// SA130 register
typedef struct _tFPGAPar130 {
	union 
	{
		BIT16 value;
		struct
		{
			BIT16 en_full_flush : 1;
			BIT16 en_pflush : 1;
			BIT16 en_half_pflush: 1;
			BIT16 en_std_multi_frame :1;
			BIT16 en_standard :1;
			BIT16 en_panel_stable :1;
			BIT16 en_multi_frame :1;
			BIT16 en_test_pattern_col :1;
			BIT16 en_test_pattern_row :1;
			BIT16 reserved :7;
		} reg;
	} OP_MODE_REG;
	
	BIT16 GATE_SIZE;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 en_pwr_dwn :1;
			BIT16 en_pwr_off :1;
			BIT16 en_16bit_adc :1;
			BIT16 gate_lr :1;
			BIT16 led_off : 1;
			BIT16 reserved :11;
		} reg;
	} CTRL_SIGNAL;

	BIT16 BACK_BIAS_SIZE;
	BIT16 IMAGE_HEIGHT;
	BIT16 IMAGE_HEIGHT_AED_READ;
	BIT16 IMAGE_HEIGHT_AED_FLUSH;
	BIT16 CYCLE_WIDTH_FLUSH;
	BIT16 CYCLE_WIDTH_AED_READ;
	BIT16 CYCLE_WIDTH_AED_FLUSH;
	BIT16 CYCLE_WIDTH_READ;
	BIT16 REPEAT_BACK_BIAS;
	BIT16 REPEAT_FLUSH;
	BIT16 REPEAT_AED_READ;
	BIT16 SATURATION_FLUSH_REPEAT;
	BIT16 UP_BACK_BIAS;
	BIT16 DOWN_BACK_BIAS;
	BIT16 UP_BACK_BIAS_OPR;
	BIT16 DOWN_BACK_BIAS_OPR;
	BIT16 UP_GATE_STV_READ;
	BIT16 DOWN_GATE_STV_READ;
	BIT16 UP_GATE_CPV1_READ;
	BIT16 DOWN_GATE_CPV1_READ;
	BIT16 UP_GATE_CPV2_READ;
	BIT16 DOWN_GATE_CPV2_READ;
	BIT16 DOWN_GATE_OE1_READ;
	BIT16 UP_GATE_OE1_READ;
	BIT16 DOWN_GATE_OE2_READ;
	BIT16 UP_GATE_OE2_READ;

	BIT16 UP_GATE_STV_AED;
	BIT16 DOWN_GATE_STV_AED;
	BIT16 UP_GATE_CPV1_AED;
	BIT16 DOWN_GATE_CPV1_AED;
	BIT16 UP_GATE_CPV2_AED;
	BIT16 DOWN_GATE_CPV2_AED;
	BIT16 DOWN_GATE_OE1_AED;
	BIT16 UP_GATE_OE1_AED;
	BIT16 DOWN_GATE_OE2_AED;
	BIT16 UP_GATE_OE2_AED;

	BIT16 UP_GATE_STV_AED_FLUSH;
	BIT16 DOWN_GATE_STV_AED_FLUSH;
	BIT16 UP_GATE_CPV1_AED_FLUSH;
	BIT16 DOWN_GATE_CPV1_AED_FLUSH;
	BIT16 UP_GATE_CPV2_AED_FLUSH;
	BIT16 DOWN_GATE_CPV2_AED_FLUSH;
	BIT16 DOWN_GATE_OE1_AED_FLUSH;
	BIT16 UP_GATE_OE1_AED_FLUSH;
	BIT16 DOWN_GATE_OE2_AED_FLUSH;
	BIT16 UP_GATE_OE2_AED_FLUSH;
	BIT16 DOWN_GATE_XAO_AED_FLUSH;
	BIT16 UP_GATE_XAO_AED_FLUSH;

	BIT16 UP_GATE_STV_FLUSH;
	BIT16 DOWN_GATE_STV_FLUSH;
	BIT16 UP_GATE_CPV1_FLUSH;
	BIT16 DOWN_GATE_CPV1_FLUSH;
	BIT16 UP_GATE_CPV2_FLUSH;
	BIT16 DOWN_GATE_CPV2_FLUSH;
	BIT16 DOWN_GATE_OE1_FLUSH;
	BIT16 UP_GATE_OE1_FLUSH;
	BIT16 DOWN_GATE_OE2_FLUSH;
	BIT16 UP_GATE_OE2_FLUSH;
	BIT16 DOWN_GATE_XAO_FLUSH;
	BIT16 UP_GATE_XAO_FLUSH;

	BIT16 UP_INTB_READ;
	BIT16 DOWN_INTB_READ;
	// READ
	BIT16 UP_SH0_1_READ;
	BIT16 DOWN_SH0_1_READ;
	BIT16 UP_SH0_2_READ;
	BIT16 DOWN_SH0_2_READ;
	BIT16 UP_SH1_1_READ;
	BIT16 DOWN_SH1_1_READ;
	BIT16 UP_SH1_2_READ;
	BIT16 DOWN_SH1_2_READ;
	BIT16 UP_SH2_1_READ;
	BIT16 DOWN_SH2_1_READ;
	BIT16 UP_SH2_2_READ;
	BIT16 DOWN_SH2_2_READ;
	BIT16 UP_RST_1_READ;
	BIT16 DOWN_RST_1_READ;
	BIT16 UP_RST_2_READ;
	BIT16 DOWN_RST_2_READ;
	BIT16 UP_SRCLR_1_READ;
	BIT16 DOWN_SRCLR_1_READ;
	BIT16 UP_SRCLR_2_READ;
	BIT16 DOWN_SRCLR_2_READ;
	BIT16 UP_FRST_1_READ;
	BIT16 DOWN_FRST_1_READ;
	BIT16 UP_FRST_2_READ;
	BIT16 DOWN_FRST_2_READ;
	BIT16 UP_ROIC_OE1_READ;
	BIT16 DOWN_ROIC_OE1_READ;
	BIT16 UP_ROIC_OE2_READ;
	BIT16 DOWN_ROIC_OE2_READ;
	BIT16 UP_ROIC_OE3_READ;
	BIT16 DOWN_ROIC_OE3_READ;
	BIT16 UP_ROIC_OE4_READ;
	BIT16 DOWN_ROIC_OE4_READ;
	BIT16 UP_ROIC_OE5_READ;
	BIT16 DOWN_ROIC_OE5_READ;
	BIT16 UP_ROIC_OE6_READ;
	BIT16 DOWN_ROIC_OE6_READ;
	BIT16 UP_ROIC_CHG_READ;
	BIT16 DOWN_ROIC_CHG_READ;
	BIT16 UP_ROIC_DISCHG_READ;
	BIT16 DOWN_ROIC_DISCHG_READ;

	BIT16 UP_INTB_AED;
	BIT16 DOWN_INTB_AED;
	// AED
	BIT16 UP_SH0_1_AED;
	BIT16 DOWN_SH0_1_AED;
	BIT16 UP_SH0_2_AED;
	BIT16 DOWN_SH0_2_AED;
	BIT16 UP_SH1_1_AED;
	BIT16 DOWN_SH1_1_AED;
	BIT16 UP_SH1_2_AED;
	BIT16 DOWN_SH1_2_AED;
	BIT16 UP_SH2_1_AED;
	BIT16 DOWN_SH2_1_AED;
	BIT16 UP_SH2_2_AED;
	BIT16 DOWN_SH2_2_AED;
	BIT16 UP_RST_1_AED;
	BIT16 DOWN_RST_1_AED;
	BIT16 UP_RST_2_AED;
	BIT16 DOWN_RST_2_AED;
	BIT16 UP_SRCLR_1_AED;
	BIT16 DOWN_SRCLR_1_AED;
	BIT16 UP_SRCLR_2_AED;
	BIT16 DOWN_SRCLR_2_AED;
	BIT16 UP_FRST_1_AED;
	BIT16 DOWN_FRST_1_AED;
	BIT16 UP_FRST_2_AED;
	BIT16 DOWN_FRST_2_AED;
	BIT16 UP_ROIC_OE1_AED;
	BIT16 DOWN_ROIC_OE1_AED;
	BIT16 UP_ROIC_OE2_AED;
	BIT16 DOWN_ROIC_OE2_AED;
	BIT16 UP_ROIC_OE3_AED;
	BIT16 DOWN_ROIC_OE3_AED;
	BIT16 UP_ROIC_OE4_AED;
	BIT16 DOWN_ROIC_OE4_AED;
	BIT16 UP_ROIC_OE5_AED;
	BIT16 DOWN_ROIC_OE5_AED;
	BIT16 UP_ROIC_OE6_AED;
	BIT16 DOWN_ROIC_OE6_AED;

	BIT16 UP_INTB_AED_FLUSH;
	BIT16 DOWN_INTB_AED_FLUSH;

	BIT16 UP_SH0_AED_FLUSH;
	BIT16 DOWN_SH0_AED_FLUSH;
	BIT16 UP_SH1_AED_FLUSH;
	BIT16 DOWN_SH1_AED_FLUSH;
 	BIT16 UP_SH2_AED_FLUSH;
 	BIT16 DOWN_SH2_AED_FLUSH;
 	BIT16 UP_RST_AED_FLUSH;
 	BIT16 DOWN_RST_AED_FLUSH;
 	BIT16 UP_SRCLR_AED_FLUSH;
 	BIT16 DOWN_SRCLR_AED_FLUSH;
 	BIT16 UP_FRST_AED_FLUSH;
 	BIT16 DOWN_FRST_AED_FLUSH;

	BIT16 UP_INTB_FLUSH;
	BIT16 DOWN_INTB_FLUSH;
	// FLUSH
	BIT16 UP_SH0_FLUSH;
	BIT16 DOWN_SH0_FLUSH;
	BIT16 UP_SH1_FLUSH;
	BIT16 DOWN_SH1_FLUSH;
	BIT16 UP_SH2_FLUSH;
	BIT16 DOWN_SH2_FLUSH;
	BIT16 UP_RST_FLUSH;
	BIT16 DOWN_RST_FLUSH;
	BIT16 UP_SRCLR_FLUSH;
	BIT16 DOWN_SRCLR_FLUSH;
	BIT16 UP_FRST_FLUSH;
	BIT16 DOWN_FRST_FLUSH;

	BIT16 READY_AED_READ;
	BIT16 AED_DARK_DELAY;
	BIT16 CYCLE_JUDGE_TRIGGER;
	BIT16 NUM_TRIGGER;
	BIT16 NUM_TRIGGER_CNT;

	union {
		BIT16 value;
		struct 
		{
			BIT16 en_aed : 1;
			BIT16 aed_test_mode1 : 1;
			BIT16 aed_test_mode2 : 1;
			BIT16 reserved : 13;
		} reg;
	} AED_CMD;

	BIT16 AED_LINE_TH;
	BIT16 AED_FRAME_TH;
	BIT16 NEGA_AED_LINE_TH;
	BIT16 POSI_AED_LINE_TH;
	BIT16 NEGA_AED_FRAME_TH;
	BIT16 POSI_AED_FRAME_TH;

	// 191128 add ROIC Parameter
	union
	{
		BIT16 value;
		struct
		{
			BIT16 ROIC_LPF : 3;
			BIT16 ROIC_GAIN : 4;
			BIT16 ROIC_STANDBY : 1;
			BIT16 SHDNB : 1;
			BIT16 SET_CHG_LOW : 1;
			BIT16 SET_CHG_HIGH : 1;
			BIT16 SET_INTB_BOTH : 1;
			BIT16 SWITCHING_INTB : 1;
			BIT16 reserved : 3;
		} reg;
	} SET_ROIC;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ROIC_OE_DELAY : 3;
			BIT16 reserved : 13;
		} reg;
	} ROIC_OE_DELAY;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ADC_CLK_DELAY : 1;
			BIT16 reserved : 15;
		} reg;
	} ADC_CLK_DELAY;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ADD_ADC_DELAY : 3;
			BIT16 reserved : 13;
		} reg;
	} ADD_ADC_DELAY;

	// ADC
	BIT16 UP_ADC_CNV;
	BIT16 DOWN_ADC_CNV;
	BIT16 UP_ADC_CLK_INDEX;
	BIT16 DOWN_ADC_CLK_INDEX;
} tFPGAPar130;

typedef struct _tFPGAPar132 
{
	union 
	{
		BIT16 value;
		struct
		{
			BIT16 en_full_flush : 1;
			BIT16 en_pflush : 1;
			BIT16 en_half_pflush: 1;
			BIT16 en_std_multi_frame :1;
			BIT16 en_standard :1;
			BIT16 en_panel_stable :1;
			BIT16 en_multi_frame :1;
			BIT16 en_test_pattern_col :1;
			BIT16 en_test_pattern_row :1;
			BIT16 reserved :7;
		} reg;
	} OP_MODE_REG;
	
	BIT16 GATE_SIZE;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 en_pwr_dwn :1;
			BIT16 en_pwr_off :1;
			BIT16 en_16bit_adc :1;
			BIT16 gate_lr :1;
			BIT16 led_off : 1;
			BIT16 reserved :11;
		} reg;
	} CTRL_SIGNAL;

	BIT16 BACK_BIAS_SIZE;
	BIT16 IMAGE_HEIGHT;
	BIT16 IMAGE_HEIGHT_AED_READ;
	BIT16 IMAGE_HEIGHT_AED_FLUSH;
	BIT16 CYCLE_WIDTH_FLUSH;
	BIT16 CYCLE_WIDTH_AED_READ;
	BIT16 CYCLE_WIDTH_AED_FLUSH;
	BIT16 CYCLE_WIDTH_READ;
	BIT16 REPEAT_BACK_BIAS;
	BIT16 REPEAT_FLUSH;
	BIT16 REPEAT_AED_READ;
	BIT16 SATURATION_FLUSH_REPEAT;
	BIT16 UP_BACK_BIAS;
	BIT16 DOWN_BACK_BIAS;
	BIT16 UP_BACK_BIAS_OPR;
	BIT16 DOWN_BACK_BIAS_OPR;
	BIT16 UP_GATE_STV_READ;
	BIT16 DOWN_GATE_STV_READ;
	BIT16 UP_GATE_CPV1_READ;
	BIT16 DOWN_GATE_CPV1_READ;
	BIT16 UP_GATE_CPV2_READ;
	BIT16 DOWN_GATE_CPV2_READ;
	BIT16 DOWN_GATE_OE1_READ;
	BIT16 UP_GATE_OE1_READ;
	BIT16 DOWN_GATE_OE2_READ;
	BIT16 UP_GATE_OE2_READ;

	BIT16 UP_GATE_STV_AED;
	BIT16 DOWN_GATE_STV_AED;
	BIT16 UP_GATE_CPV1_AED;
	BIT16 DOWN_GATE_CPV1_AED;
	BIT16 UP_GATE_CPV2_AED;
	BIT16 DOWN_GATE_CPV2_AED;
	BIT16 DOWN_GATE_OE1_AED;
	BIT16 UP_GATE_OE1_AED;
	BIT16 DOWN_GATE_OE2_AED;
	BIT16 UP_GATE_OE2_AED;

	BIT16 UP_GATE_STV_AED_FLUSH;
	BIT16 DOWN_GATE_STV_AED_FLUSH;
	BIT16 UP_GATE_CPV1_AED_FLUSH;
	BIT16 DOWN_GATE_CPV1_AED_FLUSH;
	BIT16 UP_GATE_CPV2_AED_FLUSH;
	BIT16 DOWN_GATE_CPV2_AED_FLUSH;
	BIT16 DOWN_GATE_OE1_AED_FLUSH;
	BIT16 UP_GATE_OE1_AED_FLUSH;
	BIT16 DOWN_GATE_OE2_AED_FLUSH;
	BIT16 UP_GATE_OE2_AED_FLUSH;
	BIT16 DOWN_GATE_XAO_AED_FLUSH;
	BIT16 UP_GATE_XAO_AED_FLUSH;

	BIT16 UP_GATE_STV_FLUSH;
	BIT16 DOWN_GATE_STV_FLUSH;
	BIT16 UP_GATE_CPV1_FLUSH;
	BIT16 DOWN_GATE_CPV1_FLUSH;
	BIT16 UP_GATE_CPV2_FLUSH;
	BIT16 DOWN_GATE_CPV2_FLUSH;
	BIT16 DOWN_GATE_OE1_FLUSH;
	BIT16 UP_GATE_OE1_FLUSH;
	BIT16 DOWN_GATE_OE2_FLUSH;
	BIT16 UP_GATE_OE2_FLUSH;
	BIT16 DOWN_GATE_XAO_FLUSH;
	BIT16 UP_GATE_XAO_FLUSH;

	// READ
	BIT16 UP_SH0_1_READ;
	BIT16 DOWN_SH0_1_READ;
	BIT16 UP_SH0_2_READ;
	BIT16 DOWN_SH0_2_READ;
	BIT16 UP_SH1_1_READ;
	BIT16 DOWN_SH1_1_READ;
	BIT16 UP_SH1_2_READ;
	BIT16 DOWN_SH1_2_READ;
	BIT16 UP_SH2_1_READ;
	BIT16 DOWN_SH2_1_READ;
	BIT16 UP_SH2_2_READ;
	BIT16 DOWN_SH2_2_READ;
	BIT16 UP_RST_1_READ;
	BIT16 DOWN_RST_1_READ;
	BIT16 UP_RST_2_READ;
	BIT16 DOWN_RST_2_READ;
	BIT16 UP_SRCLR_1_READ;
	BIT16 DOWN_SRCLR_1_READ;
	BIT16 UP_SRCLR_2_READ;
	BIT16 DOWN_SRCLR_2_READ;
	BIT16 UP_FRST_1_READ;
	BIT16 DOWN_FRST_1_READ;
	BIT16 UP_FRST_2_READ;
	BIT16 DOWN_FRST_2_READ;
	BIT16 UP_ROIC_OE1_READ;
	BIT16 DOWN_ROIC_OE1_READ;
	BIT16 UP_ROIC_OE2_READ;
	BIT16 DOWN_ROIC_OE2_READ;
	BIT16 UP_ROIC_OE3_READ;
	BIT16 DOWN_ROIC_OE3_READ;
	BIT16 UP_ROIC_OE4_READ;
	BIT16 DOWN_ROIC_OE4_READ;
	BIT16 UP_ROIC_OE5_READ;
	BIT16 DOWN_ROIC_OE5_READ;
	BIT16 UP_ROIC_OE6_READ;
	BIT16 DOWN_ROIC_OE6_READ;
	BIT16 UP_ROIC_CHG_READ;
	BIT16 DOWN_ROIC_CHG_READ;

	// AED
	BIT16 UP_SH0_1_AED;
	BIT16 DOWN_SH0_1_AED;
	BIT16 UP_SH0_2_AED;
	BIT16 DOWN_SH0_2_AED;
	BIT16 UP_SH1_1_AED;
	BIT16 DOWN_SH1_1_AED;
	BIT16 UP_SH1_2_AED;
	BIT16 DOWN_SH1_2_AED;
	BIT16 UP_SH2_1_AED;
	BIT16 DOWN_SH2_1_AED;
	BIT16 UP_SH2_2_AED;
	BIT16 DOWN_SH2_2_AED;
	BIT16 UP_RST_1_AED;
	BIT16 DOWN_RST_1_AED;
	BIT16 UP_RST_2_AED;
	BIT16 DOWN_RST_2_AED;
	BIT16 UP_SRCLR_1_AED;
	BIT16 DOWN_SRCLR_1_AED;
	BIT16 UP_SRCLR_2_AED;
	BIT16 DOWN_SRCLR_2_AED;
	BIT16 UP_FRST_1_AED;
	BIT16 DOWN_FRST_1_AED;
	BIT16 UP_FRST_2_AED;
	BIT16 DOWN_FRST_2_AED;
	BIT16 UP_ROIC_OE1_AED;
	BIT16 DOWN_ROIC_OE1_AED;
	BIT16 UP_ROIC_OE2_AED;
	BIT16 DOWN_ROIC_OE2_AED;
	BIT16 UP_ROIC_OE3_AED;
	BIT16 DOWN_ROIC_OE3_AED;
	BIT16 UP_ROIC_OE4_AED;
	BIT16 DOWN_ROIC_OE4_AED;
	BIT16 UP_ROIC_OE5_AED;
	BIT16 DOWN_ROIC_OE5_AED;
	BIT16 UP_ROIC_OE6_AED;
	BIT16 DOWN_ROIC_OE6_AED;

	BIT16 UP_SH0_AED_FLUSH;
	BIT16 DOWN_SH0_AED_FLUSH;
	BIT16 UP_SH1_AED_FLUSH;
	BIT16 DOWN_SH1_AED_FLUSH;
 	BIT16 UP_SH2_AED_FLUSH;
 	BIT16 DOWN_SH2_AED_FLUSH;
 	BIT16 UP_RST_AED_FLUSH;
 	BIT16 DOWN_RST_AED_FLUSH;
 	BIT16 UP_SRCLR_AED_FLUSH;
 	BIT16 DOWN_SRCLR_AED_FLUSH;
 	BIT16 UP_FRST_AED_FLUSH;
 	BIT16 DOWN_FRST_AED_FLUSH;

	// FLUSH
	BIT16 UP_SH0_FLUSH;
	BIT16 DOWN_SH0_FLUSH;
	BIT16 UP_SH1_FLUSH;
	BIT16 DOWN_SH1_FLUSH;
	BIT16 UP_SH2_FLUSH;
	BIT16 DOWN_SH2_FLUSH;
	BIT16 UP_RST_FLUSH;
	BIT16 DOWN_RST_FLUSH;
	BIT16 UP_SRCLR_FLUSH;
	BIT16 DOWN_SRCLR_FLUSH;
	BIT16 UP_FRST_FLUSH;
	BIT16 DOWN_FRST_FLUSH;

	BIT16 READY_AED_READ;
	BIT16 AED_DARK_DELAY;
	BIT16 CYCLE_JUDGE_TRIGGER;
	BIT16 NUM_TRIGGER;
	BIT16 NUM_TRIGGER_CNT;

	union {
		BIT16 value;
		struct 
		{
			BIT16 en_aed : 1;
			BIT16 aed_test_mode1 : 1;
			BIT16 aed_test_mode2 : 1;
			BIT16 reserved : 13;
		} reg;
	} AED_CMD;

	BIT16 AED_LINE_TH;
	BIT16 AED_FRAME_TH;
	BIT16 NEGA_AED_LINE_TH;
	BIT16 POSI_AED_LINE_TH;
	BIT16 NEGA_AED_FRAME_TH;
	BIT16 POSI_AED_FRAME_TH;

	// 191128 add ROIC Parameter
	union
	{
		BIT16 value;
		struct
		{
			BIT16 ROIC_LPF : 3;
			BIT16 ROIC_GAIN : 4;
			BIT16 ROIC_SCAN_CTRL : 1;
			BIT16 ROIC_SHDNB : 1;
			BIT16 ROIC_STANDBY : 1;
			BIT16 ROIC_LOWPOWER : 1;
			BIT16 ROIC_EXT_VREF : 1;
			BIT16 SET_BIST_LOW : 1;
			BIT16 SET_BIST_HIGH : 1;
			BIT16 SET_TEST_MODE1_HIGH : 1;
			BIT16 SET_TEST_MODE2_HIGH : 1;
		} reg;
	} SET_ROIC;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ROIC_OE_DELAY : 3;
			BIT16 reserved : 13;
		} reg;
	} ROIC_OE_DELAY;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ADC_CLK_DELAY : 1;
			BIT16 reserved : 15;
		} reg;
	} ADC_CLK_DELAY;

	union
	{
		BIT16 value;
		struct
		{
			BIT16 ADD_ADC_DELAY : 3;
			BIT16 reserved : 13;
		} reg;
	} ADD_ADC_DELAY;

	// ADC
	BIT16 UP_ADC_CNV;
	BIT16 DOWN_ADC_CNV;
	BIT16 UP_ADC_CLK_INDEX;
	BIT16 DOWN_ADC_CLK_INDEX;
} tFPGAPar132;
